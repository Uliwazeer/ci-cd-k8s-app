pipeline {
  agent any

  environment {
    // Optional: Define image name as a variable
    IMAGE_NAME = 'aliwazeer/ci-cd-app'
  }

  stages {
    stage('Clone Repo') {
      steps {
        echo '📥 Cloning repository...'
        git 'https://github.com/Uliwazeer/ci-cd-k8s-app.git'
      }
    }

    stage('Install Dependencies') {
      steps {
        dir('app') {
          echo '📦 Installing dependencies...'
          sh 'npm install'
        }
      }
    }

    stage('SonarQube Analysis') {
      steps {
        echo '🔍 Running SonarQube analysis...'
        withSonarQubeEnv('MySonarQube') {
          dir('app') {
            sh 'npx sonarqube-scanner'
          }
        }
      }
    }

    stage('Run Tests') {
      steps {
        dir('app') {
          echo '🧪 Running tests...'
          sh 'npm test'
        }
      }
    }

    stage('Build Docker Image') {
      steps {
        dir('app') {
          script {
            echo '🐳 Building Docker image...'
            docker.build("${IMAGE_NAME}", '.')
          }
        }
      }
    }

    stage('Push to DockerHub') {
      steps {
        withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
          script {
            echo '📤 Pushing Docker image to DockerHub...'
            docker.withRegistry('https://index.docker.io/v1/', 'dockerhub-creds') {
              docker.image("${IMAGE_NAME}").push('latest')
            }
          }
        }
      }
    }

    stage('Deploy to Kubernetes') {
      steps {
        echo '🚀 Deploying to Kubernetes...'
        sh 'kubectl apply -f k8s/deployment.yaml'
        sh 'kubectl apply -f k8s/service.yaml'
        sh 'kubectl apply -f k8s/prometheus.yaml || echo "⚠️ Prometheus configuration skipped."'
      }
    }
  }
}
